// minimal abstract function
fn foo() -> addr;

// minimal abstract function with empty body
fn foo() -> addr {}

// minimal abstract function with empty body, and optional semicolon
fn foo() -> addr {};

// some arguments
fn foo(a : addr) -> addr;
fn foo(a : addr, b : size) -> addr;

// ensures requires clauses
fn foo(a : addr, b : size) -> addr
    requires a > 0;
{
}

// ensures requires clauses
fn foo(a : addr, b : size) -> addr
    requires a > 0;
    ensures ret < 0;
{
}

// ensures requires clauses
fn foo(a : addr, b : size) -> addr
    requires a > 0;
    requires a > 1;
    ensures ret < 0;
    ensures ret < 1;
{
}

fn foo(a : addr, b : size) -> addr {
    let x : int = 0;
    return x;
}